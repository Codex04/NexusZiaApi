.TH "nexusZiaApi::IHooks" 3 "Wed Nov 15 2017" "Nexus ZIA API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nexusZiaApi::IHooks \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBTypes\fP { \fBDEFAULT\fP = 0, \fBREQUEST_BEFORE_PARSING\fP = 1, \fBREQUEST_AFTER_PARSING\fP = 2, \fBREQUEST_DONE\fP = 3, \fBRESPONSE_BEFORE_BUILD\fP = 4, \fBRESPONSE_POST_BUILD\fP = 5, \fBRESPONSE_SEND\fP = 6 }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual const std::list< \fBTypes\fP > & \fBgetAllHooks\fP (void) const =0"
.br
.ti -1c
.RI "virtual const std::list< \fBTypes\fP > & \fBgetHooksForModule\fP (const std::string &name) const =0"
.br
.ti -1c
.RI "virtual void \fBsubscribe\fP (const \fBTypes\fP &type, const std::string &name)=0"
.br
.ti -1c
.RI "virtual void \fBunSubscribe\fP (const \fBTypes\fP &type, const std::string &name)=0"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBnexusZiaApi::IHooks::Types\fP\fC [strong]\fP"
\fBDefine\fP type of hook define 
.SH "Member Function Documentation"
.PP 
.SS "virtual const std::list<\fBTypes\fP>& nexusZiaApi::IHooks::getAllHooks (void) const\fC [pure virtual]\fP"
Get list of hooks 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.SS "virtual const std::list<\fBTypes\fP>& nexusZiaApi::IHooks::getHooksForModule (const std::string & name) const\fC [pure virtual]\fP"
Get hooks register for module (by name) 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Module name 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.SS "virtual void nexusZiaApi::IHooks::subscribe (const \fBTypes\fP & type, const std::string & name)\fC [pure virtual]\fP"
Add hook register 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Type hooks 
.br
\fIname\fP Name of module 
.RE
.PP

.SS "virtual void nexusZiaApi::IHooks::unSubscribe (const \fBTypes\fP & type, const std::string & name)\fC [pure virtual]\fP"
Remove hook register 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP Type hooks 
.br
\fIname\fP Name of module 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Nexus ZIA API from the source code\&.
